
R version 3.3.0 (2016-05-03) -- "Supposedly Educational"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R est un logiciel libre livré sans AUCUNE GARANTIE.
Vous pouvez le redistribuer sous certaines conditions.
Tapez 'license()' ou 'licence()' pour plus de détails.

R est un projet collaboratif avec de nombreux contributeurs.
Tapez 'contributors()' pour plus d'information et
'citation()' pour la façon de le citer dans les publications.

Tapez 'demo()' pour des démonstrations, 'help()' pour l'aide
en ligne ou 'help.start()' pour obtenir l'aide au format HTML.
Tapez 'q()' pour quitter R.

[Sauvegarde de la session précédente restaurée]

> # get data from file
> # column 1 is labels (row names)
> w <- getwd()
> w
[1] "/Users/cyprien/visulog/cli"
> 
> setwd(".visulogRTempFiles")
> #z <- paste(w,".visulogRTempFiles",sep="/")
> x <- read.table("commitsPerDate.txt", header = FALSE, row.names = 1)
> colnames(x) <- "nb"
> attach(x)
> 
> ## SETTINGS:
> prob <- FALSE # set to TRUE if barplot(%) desired
> tofile <- TRUE # set to FALSE to print in RStudio
> 
> 
> 
> 
> pct <- 100*nb/sum(nb) # normalize to empirical probabilities (%)
> # build colors from %
> pcgood <- 10 # level qualifying what "good" means
> cl <- (pct < pcgood)*2 # red
> cl[cl == 0] <- 3   # green
> 
> # Do the plot
> clab <- 1.4    # label size, 1 = default size
> cnames <- 0.8  # bar names size, adapt to nb of bars
> lgdbon <- paste("bon (>", pcgood,"%)")
> 
> if (! tofile) if (prob) {
+   barplot(pct, names.arg = row.names(x), main="Commits par auteurs (%)",
+         ylim = c(0, min(c(100, max(pct)+10))),
+         xlab="auteurs", ylab="% de commits" , 
+         cex.names = cnames, cex.lab=clab, col=cl)
+   legend("topleft", legend = c(lgdbon,"mauvais"), fill=3:2,
+        bg = "antiquewhite")
+   # visualize "good" level...
+   abline(h = pcgood, lty=2, col=8)
+ } else {
+   barplot(nb, names.arg = row.names(x), main="Commits par auteurs",
+           xlab="auteurs", ylab="nombre de commits", 
+           cex.names = cnames, cex.lab=clab, las = 2)}
> 
> # output plot to a file in png; see ?pdf or ?png
> if (tofile) {
+   pdf(file = "CommitsPerDate.pdf", width=7, height=5) # 1920/1080 full HD png
+   clab <- 1.4    # label size, 1 = default size
+   cnames <- 1  # bar names size, adapt to nb of bars
+   
+   if (prob) {
+     barplot(pct, names.arg = row.names(x), main="Commits par auteurs (%)",
+             ylim = c(0, min(c(100, max(pct)+10))),
+             xlab="", ylab="% de commits" , 
+             cex.names = cnames, cex.lab=clab, col=cl, las = 2)
+     legend("topleft", legend = c(lgdbon,lgdbad), fill=3:2,
+            bg = "antiquewhite")
+     # visualize "good" level...
+     abline(h = pcgood, lty=2, col=8)
+   } else {
+     barplot(nb, names.arg = row.names(x), main="Commits par auteurs",
+             xlab="", ylab="nombre de commits", 
+             cex.names = cnames, cex.lab=clab, las = 2)}
null device 
          1 
> ########
> # pdf width=7, height=5
> 
> 
> proc.time()
utilisateur     système      écoulé 
      0.280       0.054       0.387
