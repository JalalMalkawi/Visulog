
R version 3.3.0 (2016-05-03) -- "Supposedly Educational"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R est un logiciel libre livré sans AUCUNE GARANTIE.
Vous pouvez le redistribuer sous certaines conditions.
Tapez 'license()' ou 'licence()' pour plus de détails.

R est un projet collaboratif avec de nombreux contributeurs.
Tapez 'contributors()' pour plus d'information et
'citation()' pour la façon de le citer dans les publications.

Tapez 'demo()' pour des démonstrations, 'help()' pour l'aide
en ligne ou 'help.start()' pour obtenir l'aide au format HTML.
Tapez 'q()' pour quitter R.

> # get data from file
> # x <- read.table("toto.txt", header = TRUE)
> 
> # or manually here
> nb <- c(100, 540, 320, 126)
> 
> # generate random data as if it comes from a file
> nbauth <- 15 # nb auteurs, then generate names
> nom <- paste("author", 1:nbauth, sep="") # author1,...author_nbauth
> nb <- sample(nb, size = nbauth, replace = TRUE)
> nb <- nb + sample(seq(-10,10,5), size = nbauth, replace = TRUE) # add some randomness
> x <- data.frame(nom, nb)
> x
        nom  nb
1   author1 136
2   author2 540
3   author3 540
4   author4 100
5   author5 310
6   author6 320
7   author7 320
8   author8 540
9   author9 540
10 author10 545
11 author11 110
12 author12 310
13 author13 310
14 author14 550
15 author15 310
> 
> 
> pct <- 100*nb/sum(nb) # normalize to empirical probabilities (%)
> # build colors from %
> pcgood <- 10 # level qualifying what "good" means
> cl <- (pct < pcgood)*2 # red
> cl[cl == 0] <- 3   # green
> 
> 
> # Do the plot
> clab <- 1.4    # label size, 1 = default size
> cnames <- 0.8  # bar names size, adapt to nb of bars
> lgdbon <- paste("bon (>", pcgood,"%)")
> barplot(pct, names.arg = nom, main="Commits par auteurs",
+         ylim = c(0, min(c(100, max(pct)+10))),
+         xlab="auteurs", ylab="% de commits" , 
+         cex.names = cnames, cex.lab=clab, col=cl)
> legend("topleft", legend = c(lgdbon,"mauvais"), fill=3:2,
+        bg = "antiquewhite")
> abline(h = pcgood, lty=2, col=8) # visualize "good" level...
> #
> 
> # output plot to a file in png; see ?pdf or ?png
> pdf(file = "mybarplot.pdf", width=7, height=5) # 1920/1080 full HD png
> clab <- 1.4    # label size, 1 = default size
> cnames <- 1  # bar names size, adapt to nb of bars
> lgdbon <- paste("bon (>", pcgood,"%)")
> 
> barplot(pct, names.arg = nom, main="Commits par auteurs",
+         ylim = c(0, min(c(100, max(pct)+10))),
+         xlab="auteurs", ylab="% de commits" , 
+         cex.names = cnames, cex.lab=clab, col=cl)
> legend("topleft", legend = c(lgdbon,"mauvais"), fill=3:2,
+        bg = "antiquewhite")
> abline(h = pcgood, lty=2, col=8) # visualize "good" level...
> dev.off() # close file
pdf 
  2 
> ########
> # pdf width=7, height=5
> 
> 
> proc.time()
utilisateur     système      écoulé 
      0.174       0.036       0.219 
