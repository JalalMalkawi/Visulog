ls()
?rm
rm(list = ls())
ls()
ls()
x <- read.table("../commitsPA.txt", header = FALSE, row.names = 1)
x
class(x)
colnames(x) <- "commits"
x
x
commits
is.list(x)
x[[1]]
x$commits
attach(x)
ls()
commits
mean(commits)
colnames(x) <- "nb"
x
commits
detach(x)
commits
attach(x)
pct <- 100*nb/sum(nb) # normalize to empirical probabilities (%)
pct
sum(nb)
pcgood <- 10 # level qualifying what "good" means
cl <- (pct < pcgood)*2 # red
cl[cl == 0] <- 3   # green
clab <- 1.4    # label size, 1 = default size
cnames <- 0.8  # bar names size, adapt to nb of bars
lgdbon <- paste("bon (>", pcgood,"%)")
barplot(pct, names.arg = nom, main="Commits par auteurs",
ylim = c(0, min(c(100, max(pct)+10))),
xlab="auteurs", ylab="% de commits" ,
cex.names = cnames, cex.lab=clab, col=cl)
legend("topleft", legend = c(lgdbon,"mauvais"), fill=3:2,
bg = "antiquewhite")
barplot(pct, names.arg = row.names(x), main="Commits par auteurs",
ylim = c(0, min(c(100, max(pct)+10))),
xlab="auteurs", ylab="% de commits" ,
cex.names = cnames, cex.lab=clab, col=cl)
legend("topleft", legend = c(lgdbon,"mauvais"), fill=3:2,
bg = "antiquewhite")
abline(h = pcgood, lty=2, col=8) # visualize "good" level...
percents
prob
if (prob) then {
barplot(pct, names.arg = row.names(x), main="Commits par auteurs (%)",
ylim = c(0, min(c(100, max(pct)+10))),
xlab="auteurs", ylab="% de commits" ,
cex.names = cnames, cex.lab=clab, col=cl)
legend("topleft", legend = c(lgdbon,"mauvais"), fill=3:2,
bg = "antiquewhite")
abline(h = pcgood, lty=2, col=8) # visualize "good" level...
} else {
barplot(nb, names.arg = row.names(x), main="Commits par auteurs",
xlab="auteurs", ylab="nombre de commits" ,
cex.names = cnames, cex.lab=clab, col=cl)
}
if (prob) then {
barplot(pct, names.arg = row.names(x), main="Commits par auteurs (%)",
ylim = c(0, min(c(100, max(pct)+10))),
xlab="auteurs", ylab="% de commits" ,
cex.names = cnames, cex.lab=clab, col=cl)
legend("topleft", legend = c(lgdbon,"mauvais"), fill=3:2,
bg = "antiquewhite")
abline(h = pcgood, lty=2, col=8) # visualize "good" level...
} else {
barplot(nb, names.arg = row.names(x), main="Commits par auteurs",
xlab="auteurs", ylab="nombre de commits" ,
cex.names = cnames, cex.lab=clab)
}
if (prob) then {
barplot(pct, names.arg = row.names(x), main="Commits par auteurs (%)",
ylim = c(0, min(c(100, max(pct)+10))),
xlab="auteurs", ylab="% de commits" ,
cex.names = cnames, cex.lab=clab, col=cl)
legend("topleft", legend = c(lgdbon,"mauvais"), fill=3:2,
bg = "antiquewhite")
abline(h = pcgood, lty=2, col=8) # visualize "good" level...
} else {
barplot(nb, names.arg = row.names(x), main="Commits par auteurs",
xlab="auteurs", ylab="nombre de commits",
cex.names = cnames, cex.lab=clab)
}
if (prob) then {
barplot(pct, names.arg = row.names(x), main="Commits par auteurs (%)",
ylim = c(0, min(c(100, max(pct)+10))),
xlab="auteurs", ylab="% de commits" ,
cex.names = cnames, cex.lab=clab, col=cl)
legend("topleft", legend = c(lgdbon,"mauvais"), fill=3:2,
bg = "antiquewhite")
# visualize "good" level...
abline(h = pcgood, lty=2, col=8)} else {
barplot(nb, names.arg = row.names(x), main="Commits par auteurs",
xlab="auteurs", ylab="nombre de commits",
cex.names = cnames, cex.lab=clab)
}
barplot(pct, names.arg = row.names(x), main="Commits par auteurs (%)",
ylim = c(0, min(c(100, max(pct)+10))),
xlab="auteurs", ylab="% de commits" ,
cex.names = cnames, cex.lab=clab, col=cl)
legend("topleft", legend = c(lgdbon,"mauvais"), fill=3:2,
bg = "antiquewhite")
barplot(nb, names.arg = row.names(x), main="Commits par auteurs",
xlab="auteurs", ylab="nombre de commits",
cex.names = cnames, cex.lab=clab)
if (prob) then {
barplot(pct, names.arg = row.names(x), main="Commits par auteurs (%)",
ylim = c(0, min(c(100, max(pct)+10))),
xlab="auteurs", ylab="% de commits" ,
cex.names = cnames, cex.lab=clab, col=cl)
legend("topleft", legend = c(lgdbon,"mauvais"), fill=3:2,
bg = "antiquewhite")
# visualize "good" level...
abline(h = pcgood, lty=2, col=8)} else {
barplot(nb, names.arg = row.names(x), main="Commits par auteurs",
xlab="auteurs", ylab="nombre de commits",
cex.names = cnames, cex.lab=clab)}
if (prob) then {
barplot(pct, names.arg = row.names(x), main="Commits par auteurs (%)",
ylim = c(0, min(c(100, max(pct)+10))),
xlab="auteurs", ylab="% de commits" ,
cex.names = cnames, cex.lab=clab, col=cl)
legend("topleft", legend = c(lgdbon,"mauvais"), fill=3:2,
bg = "antiquewhite")
# visualize "good" level...
abline(h = pcgood, lty=2, col=8)}
ls()
x <- read.table("../commitsPA.txt", header = FALSE, row.names = 1)
colnames(x) <- "nb"
attach(x)
prob <- FALSE # set to TRUE if barplot(%) desired
pct <- 100*nb/sum(nb) # normalize to empirical probabilities (%)
pcgood <- 10 # level qualifying what "good" means
cl <- (pct < pcgood)*2 # red
cl[cl == 0] <- 3   # green
clab <- 1.4    # label size, 1 = default size
cnames <- 0.8  # bar names size, adapt to nb of bars
lgdbon <- paste("bon (>", pcgood,"%)")
if (prob) then {
barplot(pct, names.arg = row.names(x), main="Commits par auteurs (%)",
ylim = c(0, min(c(100, max(pct)+10))),
xlab="auteurs", ylab="% de commits" ,
cex.names = cnames, cex.lab=clab, col=cl)
legend("topleft", legend = c(lgdbon,"mauvais"), fill=3:2,
bg = "antiquewhite")
# visualize "good" level...
abline(h = pcgood, lty=2, col=8)} else {
barplot(nb, names.arg = row.names(x), main="Commits par auteurs",
xlab="auteurs", ylab="nombre de commits",
cex.names = cnames, cex.lab=clab)}
if (prob) then {
barplot(pct, names.arg = row.names(x), main="Commits par auteurs (%)",
ylim = c(0, min(c(100, max(pct)+10))),
xlab="auteurs", ylab="% de commits" ,
cex.names = cnames, cex.lab=clab, col=cl)
legend("topleft", legend = c(lgdbon,"mauvais"), fill=3:2,
bg = "antiquewhite")
# visualize "good" level...
abline(h = pcgood, lty=2, col=8)} else {a=1}
if (prob) {
barplot(pct, names.arg = row.names(x), main="Commits par auteurs (%)",
ylim = c(0, min(c(100, max(pct)+10))),
xlab="auteurs", ylab="% de commits" ,
cex.names = cnames, cex.lab=clab, col=cl)
legend("topleft", legend = c(lgdbon,"mauvais"), fill=3:2,
bg = "antiquewhite")
# visualize "good" level...
abline(h = pcgood, lty=2, col=8)
} else {a=1}
if (prob) {
barplot(pct, names.arg = row.names(x), main="Commits par auteurs (%)",
ylim = c(0, min(c(100, max(pct)+10))),
xlab="auteurs", ylab="% de commits" ,
cex.names = cnames, cex.lab=clab, col=cl)
legend("topleft", legend = c(lgdbon,"mauvais"), fill=3:2,
bg = "antiquewhite")
# visualize "good" level...
abline(h = pcgood, lty=2, col=8)
} else {
barplot(nb, names.arg = row.names(x), main="Commits par auteurs",
xlab="auteurs", ylab="nombre de commits",
cex.names = cnames, cex.lab=clab)}
if (! tofile) if (prob) {
barplot(pct, names.arg = row.names(x), main="Commits par auteurs (%)",
ylim = c(0, min(c(100, max(pct)+10))),
xlab="auteurs", ylab="% de commits" ,
cex.names = cnames, cex.lab=clab, col=cl)
legend("topleft", legend = c(lgdbon,"mauvais"), fill=3:2,
bg = "antiquewhite")
# visualize "good" level...
abline(h = pcgood, lty=2, col=8)
} else {
barplot(nb, names.arg = row.names(x), main="Commits par auteurs",
xlab="auteurs", ylab="nombre de commits",
cex.names = cnames, cex.lab=clab)}
tofile <- TRUE # set to FALSE to print in RStudio
if (! tofile) if (prob) {
barplot(pct, names.arg = row.names(x), main="Commits par auteurs (%)",
ylim = c(0, min(c(100, max(pct)+10))),
xlab="auteurs", ylab="% de commits" ,
cex.names = cnames, cex.lab=clab, col=cl)
legend("topleft", legend = c(lgdbon,"mauvais"), fill=3:2,
bg = "antiquewhite")
# visualize "good" level...
abline(h = pcgood, lty=2, col=8)
} else {
barplot(nb, names.arg = row.names(x), main="Commits par auteurs",
xlab="auteurs", ylab="nombre de commits",
cex.names = cnames, cex.lab=clab)}
source('~/visulog/cli/barplot_generationPercent.R')
source('~/visulog/cli/barplot_generationPercent.R')
source('~/visulog/cli/barplot_generationPercent.R')
source('~/visulog/cli/barplot_generation.R')
source('~/visulog/cli/barplot_generationPercent.R')
source('~/visulog/cli/barplot_generationPercent.R')
source('~/visulog/cli/barplot_generationPercent.R')
source('~/visulog/cli/barplot_generationPercent.R')
source('~/visulog/cli/barplot_generationPercent.R')
source('~/visulog/cli/barplot_generationPercent.R')
source('~/visulog/cli/barplot_generationPercent.R')
source('~/visulog/cli/barplot_generationPercent.R')
source('~/visulog/cli/barplot_generationPercent.R')
source('~/visulog/cli/barplot_generation.R')
source('~/visulog/cli/barplot_generation.R')
x <- read.table("../commitsPA.txt", header = FALSE, row.names = 1)
colnames(x) <- "nb"
attach(x)
prob <- TRUE # set to TRUE if barplot(%) desired
tofile <- TRUE # set to FALSE to print in RStudio
nbauth <- data.frame(table(nb))
nbauth
